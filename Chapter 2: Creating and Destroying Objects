- [Item 1: Consider static factory methods instead of constructors](#Item 1: Consider-static-factory-methods-instead-of-constructors)
- [Item 2: Consider a builder when faced with many constructor parameters](#Item 2: Consider-a-builder-when-faced-with-many-constructor-parameters)
- [Item 3: Enforce the singleton property with a private constructor or an enum type](#Item 3: Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type)
- [Item 4: Enforce noninstantiability with a private constructor](#Item 4: Enforce-noninstantiability-with-a-private-constructor)
- [Item 5: Prefer dependency injection to hardwiring recourses](#Item 5: Prefer-dependency-injection-to-hardwiring-recourses)
- [Item 6: Avoid creating unnecessary objects](#Item 6: Avoid-creating-unnecessary-objects)
- [Item 7: Eliminate obsolete object references](#Item 7: Eliminate-obsolete-object-references)
- [Item 8: Avoid finalizers and cleaners](#Item 8: Avoid-finalizers-and-cleaners)
- [Item 9: Prefer try-with-resources to try-finally](#Item 9: Prefer-try-with-resources-to-try-finally)
